name: flutter_x_app
description: A new Flutter project.

# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: "none" # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.0.0+1

environment:
  sdk: ">=2.16.2 <3.0.0"

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter  
  cupertino_icons: ^1.0.2

  #(OTP) text field, iOS SMS autofill, Android SMS autofill One Time Code, Password, Passcode, Captcha, Security, Coupon, Wowcher, 2FA, Two step verification
  pinput: ^2.2.16

  #Dio and logger----
  #A powerful Http client for Dart, which supports Interceptors,
  # FormData, Request Cancellation, File Downloading, Timeout etc.
  dio: ^4.0.6
  #Pretty Dio logger is a Dio interceptor that logs network calls in a pretty, easy to read format.
  pretty_dio_logger: ^1.1.1

  #Code Generation----
  #Code generation for immutable classes that has a simple 
  #syntax/API without compromising on the features. 
  freezed: ^2.2.1
  #Classes and helper functions that support JSON code generation via the `json_serializable` package.
  json_annotation: ^4.7.0
  #Automatically generate code for converting to and from JSON by annotating Dart classes.
  json_serializable: ^6.5.4

  # State of Network(wifi,mobile,cellular)
  connectivity_plus: ^3.0.2

 #State Management Solution
  provider: ^6.0.4
  flutter_bloc: ^8.1.1

  #For comparison of data, we required Equatable. it overrides == and hashCode internally,
  #which saves a lot of boilerplate code. In Bloc,
  #we have to extend Equatable to States and Events classes to use this functionality.
  equatable: ^2.0.5

  #plugin for Google Sign-In, a secure authentication system for signing in with a Google account on Android and iOS.
  google_sign_in: ^5.4.2

  # Firebase----------------
  #Flutter plugin for Firebase Auth, enabling Android and iOS authentication using passwords,
  # phone numbers and identity providers like Google, Facebook and Twitter.
  firebase_auth: ^4.1.3
  #Flutter plugin for Google Analytics for Firebase, an app measurement solution that provides insight on app usage and user engagement on Android and iOS.
  firebase_analytics: ^10.0.6
  #Flutter plugin for Firebase Core, enabling connecting to multiple Firebase apps.
  firebase_core: ^2.3.0
  #Flutter plugin for Firebase Crashlytics. It reports uncaught errors to the Firebase console.
  firebase_crashlytics: ^3.0.6
  #Flutter plugin for Firebase Cloud Messaging,lets you reliably deliver messages on Android and iOS.
  firebase_messaging: ^14.1.1
  #Flutter plugin for Firebase Remote Config. Update your application look and feel and behavior without re-releasing.
  firebase_remote_config: ^3.0.6
  #Flutter plugin for Google Dynamic Links for Firebase
  firebase_dynamic_links: ^5.0.6
  # plugin for Google Performance Monitoring for Firebase, an app measurement solution that monitors traces and HTTP/S network requests on Android and iOS.
  firebase_performance: ^0.9.0+6
  #App Check works alongside other Firebase services to help protect your backend resources from abuse, such as billing fraud or phishing.
  firebase_app_check: ^0.1.1+5
  #Sdk for Mobile Customer engagement ,Analytics,Retentions
  clevertap_plugin: ^1.5.4
  #Android App Links, Deep Links, iOs Universal Links and Custom URL schemes handler for Flutter (desktop included).
  app_links: ^3.3.0
  #A cross platform plugin for displaying and scheduling local notifications 
  flutter_local_notifications: ^12.0.4

  #For Toast Message
  fluttertoast: ^8.1.1

  #Render After Effects animations natively on flutter
  lottie: ^2.0.0

  #Add Shimmer Effect 
  shimmer: ^2.0.0

  #Plugin-to provide mobile no verification service to verify users
  truecaller_sdk: ^0.1.2

  #For launching Url ,Supports web , phone, email , schemes and Open In app browser window
  url_launcher: ^6.1.7
  flutter_inappwebview: ^5.7.1+2

  #Sharing Content on Ios and Android 
  share_plus: ^6.3.0

  #Query Info about app package , such as CFBundle Version on ios and version Code on android
  package_info_plus: ^3.0.2

  #Checking for most recent version of flutter app
  version: ^3.0.2

  #The package contains different classes.
  # Each class contains methods that provide a solution for certain problems.
  basic_utils: ^5.4.2

  #Local Preference
  hive: ^2.2.3
  shared_preferences: ^2.0.15

  #Permission for ios tracking  and android
  permission_handler: ^10.2.0
  app_tracking_transparency: ^2.0.3

  #plugin making it easy to download files.
  flutter_downloader: ^1.9.1
  #plugin for getting commonly used locations on host platform file systems, such as the temp and app data directories.
  path_provider: ^2.0.11
  #plugin for getting Android directories. (Downloads, Movies, Pictures...)
  android_path_provider: ^0.3.0

  # plugin providing detailed information about the device (make, model, etc.),
  # and Android or iOS version the app is running on.
  device_info_plus: ^8.0.0

  # plugin for showing the In-App Review/System Rating pop up on Android, IOS and MacOS. It makes it easy for users to rate your app.
  in_app_review: ^2.0.4

  #Generic cache manager for flutter. Saves web files on the storages of the device and saves the cache info using sqflite
  flutter_cache_manager: ^3.3.0

  #plugin for sending application to background. Send your app to the background with one line of code.
  move_to_background: ^1.0.2

  #Enables In App Updates on Android using the official Android APIs.\
  in_app_update: ^4.0.1
 
  #Flutter plugin for parsing, formatting and validating international phone numbers. 
  phone_number: ^1.0.0

  #A Flutter plugin to redirect users to an app page in Google Play Store and Apple App Store.
  store_redirect: ^2.0.1

  #A Flutter plugin for opening iOS and Android phone settings from an app.
  app_settings: ^4.1.8
  
dev_dependencies:
  build_runner: ^2.1.4
  flutter_lints: ^1.0.0
  flutter_test:
    sdk: flutter

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec
# The following section is specific to Flutter.
flutter:
  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true
  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/
    - assets/images/
    - assets/images/flags/
    - assets/icons/
    - assets/web/
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg
  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.
  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages
  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: Montserrat
      fonts:
        - asset: assets/fonts/Montserrat-Regular.ttf
        - asset: assets/fonts/Montserrat-Italic.ttf
          style: italic
        - asset: assets/fonts/Montserrat-Bold.ttf
          weight: 700
    - family: Poppins
      fonts:
        - asset: assets/fonts/Poppins/Poppins-Light.ttf
        - asset: assets/fonts/Poppins/Poppins-Italic.ttf
          style: italic
        - asset: assets/fonts/Poppins/Poppins-Bold.ttf
          weight: 700
    - family: Larken-Black
      fonts:
        - asset: assets/fonts/Larken/Larken-Black.ttf
    - family: Larken
      fonts:
        - asset: assets/fonts/Larken/Larken-Regular.ttf
        - asset: assets/fonts/Larken/Larken-Bold.ttf
          weight: 700
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
