# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.

analyzer:
  exclude:
    - lib/model/*/*.dart
    - lib/model/*/*.g.dart
  strong-mode:
    implicit-casts: false
#    implicit-dynamic: false

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at
  # https://dart-lang.github.io/linter/lints/index.html.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    # https://dart-lang.github.io/linter/lints/avoid_void_async.html
    # When declaring an async method or function which does not return a value, declare that it returns Future and not just void.
    avoid_void_async: true
    # https://dart-lang.github.io/linter/lints/cancel_subscriptions.html
    # Cancelling instances of StreamSubscription prevents memory leaks and unexpected behavior.
    cancel_subscriptions: true
    close_sinks: true
    prefer_single_quotes: true
    # https://dart-lang.github.io/linter/lints/throw_in_finally.html
    throw_in_finally: true
    unnecessary_statements: true
    use_key_in_widget_constructors: false

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options